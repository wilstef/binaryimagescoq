Require Import binary_image_processing. 

(*Tool generated grayscale image matrix*)
Definition coqmatriximg := 
[203;200;201;203;203;203;205;202;199;200;202;205;203;204;196;202;201;201;201;201;
201;196;203;197;201;203;198;205;200;201;206;200;202;202;199;198;201;201;201;201;
200;201;198;201;198;200;199;200;198;199;199;208;201;200;200;205;201;201;201;201;
195;202;197;199;201;200;205;200;201;201;202;199;198;202;203;198;201;201;201;201;
198;197;201;201;200;200;196;199;200;200;204;203;203;196;204;200;201;201;201;201;
120;7;4;5;10;15;10;9;45;108;195;204;200;199;203;202;201;201;201;201;
193;185;44;4;11;138;195;177;46;3;14;139;206;209;196;202;201;201;201;201;
197;193;49;0;12;139;205;195;190;15;8;17;166;203;202;201;201;201;201;201;
196;191;48;0;12;141;204;199;195;113;5;8;78;206;203;198;200;201;201;201;
198;193;50;0;12;139;201;200;196;161;7;4;28;196;199;201;201;201;201;201;
197;194;51;1;13;141;201;200;195;167;13;4;19;170;203;203;202;201;201;201;
198;195;49;1;13;143;201;198;197;164;9;6;20;164;207;204;202;201;201;201;
198;194;49;0;11;140;201;197;196;169;5;4;26;196;203;204;201;201;201;201;
197;193;50;1;10;140;204;200;194;144;3;11;78;205;201;200;201;201;201;201;
197;189;48;0;10;142;203;192;191;51;9;17;162;206;203;201;201;201;201;201;
199;186;45;1;9;141;197;177;49;3;14;143;208;199;199;201;201;201;201;201;
114;6;3;3;10;10;11;11;43;113;192;206;203;201;202;201;201;201;201;201;
203;196;204;195;201;200;202;203;203;199;205;201;203;202;201;201;201;201;201;201;
195;202;198;200;202;198;200;200;203;197;201;201;204;203;200;200;201;201;201;201;
203;196;198;201;197;202;205;203;199;203;205;200;198;200;202;203;201;201;201;201].

(*Tool generated Coq definition of grayscale image*)
Definition coqgsimage := 
[G{0,0,203};G{0,1,200};G{0,2,201};G{0,3,203};G{0,4,203};G{0,5,203};G{0,6,205};G{0,7,202};G{0,8,199};G{0,9,200};G{0,10,202};G{0,11,205};G{0,12,203};G{0,13,204};G{0,14,196};G{0,15,202};G{0,16,201};G{0,17,201};G{0,18,201};G{0,19,201};
G{1,0,201};G{1,1,196};G{1,2,203};G{1,3,197};G{1,4,201};G{1,5,203};G{1,6,198};G{1,7,205};G{1,8,200};G{1,9,201};G{1,10,206};G{1,11,200};G{1,12,202};G{1,13,202};G{1,14,199};G{1,15,198};G{1,16,201};G{1,17,201};G{1,18,201};G{1,19,201};
G{2,0,200};G{2,1,201};G{2,2,198};G{2,3,201};G{2,4,198};G{2,5,200};G{2,6,199};G{2,7,200};G{2,8,198};G{2,9,199};G{2,10,199};G{2,11,208};G{2,12,201};G{2,13,200};G{2,14,200};G{2,15,205};G{2,16,201};G{2,17,201};G{2,18,201};G{2,19,201};
G{3,0,195};G{3,1,202};G{3,2,197};G{3,3,199};G{3,4,201};G{3,5,200};G{3,6,205};G{3,7,200};G{3,8,201};G{3,9,201};G{3,10,202};G{3,11,199};G{3,12,198};G{3,13,202};G{3,14,203};G{3,15,198};G{3,16,201};G{3,17,201};G{3,18,201};G{3,19,201};
G{4,0,198};G{4,1,197};G{4,2,201};G{4,3,201};G{4,4,200};G{4,5,200};G{4,6,196};G{4,7,199};G{4,8,200};G{4,9,200};G{4,10,204};G{4,11,203};G{4,12,203};G{4,13,196};G{4,14,204};G{4,15,200};G{4,16,201};G{4,17,201};G{4,18,201};G{4,19,201};
G{5,0,120};G{5,1,7};G{5,2,4};G{5,3,5};G{5,4,10};G{5,5,15};G{5,6,10};G{5,7,9};G{5,8,45};G{5,9,108};G{5,10,195};G{5,11,204};G{5,12,200};G{5,13,199};G{5,14,203};G{5,15,202};G{5,16,201};G{5,17,201};G{5,18,201};G{5,19,201};
G{6,0,193};G{6,1,185};G{6,2,44};G{6,3,4};G{6,4,11};G{6,5,138};G{6,6,195};G{6,7,177};G{6,8,46};G{6,9,3};G{6,10,14};G{6,11,139};G{6,12,206};G{6,13,209};G{6,14,196};G{6,15,202};G{6,16,201};G{6,17,201};G{6,18,201};G{6,19,201};
G{7,0,197};G{7,1,193};G{7,2,49};G{7,3,0};G{7,4,12};G{7,5,139};G{7,6,205};G{7,7,195};G{7,8,190};G{7,9,15};G{7,10,8};G{7,11,17};G{7,12,166};G{7,13,203};G{7,14,202};G{7,15,201};G{7,16,201};G{7,17,201};G{7,18,201};G{7,19,201};
G{8,0,196};G{8,1,191};G{8,2,48};G{8,3,0};G{8,4,12};G{8,5,141};G{8,6,204};G{8,7,199};G{8,8,195};G{8,9,113};G{8,10,5};G{8,11,8};G{8,12,78};G{8,13,206};G{8,14,203};G{8,15,198};G{8,16,200};G{8,17,201};G{8,18,201};G{8,19,201};
G{9,0,198};G{9,1,193};G{9,2,50};G{9,3,0};G{9,4,12};G{9,5,139};G{9,6,201};G{9,7,200};G{9,8,196};G{9,9,161};G{9,10,7};G{9,11,4};G{9,12,28};G{9,13,196};G{9,14,199};G{9,15,201};G{9,16,201};G{9,17,201};G{9,18,201};G{9,19,201};
G{10,0,197};G{10,1,194};G{10,2,51};G{10,3,1};G{10,4,13};G{10,5,141};G{10,6,201};G{10,7,200};G{10,8,195};G{10,9,167};G{10,10,13};G{10,11,4};G{10,12,19};G{10,13,170};G{10,14,203};G{10,15,203};G{10,16,202};G{10,17,201};G{10,18,201};G{10,19,201};
G{11,0,198};G{11,1,195};G{11,2,49};G{11,3,1};G{11,4,13};G{11,5,143};G{11,6,201};G{11,7,198};G{11,8,197};G{11,9,164};G{11,10,9};G{11,11,6};G{11,12,20};G{11,13,164};G{11,14,207};G{11,15,204};G{11,16,202};G{11,17,201};G{11,18,201};G{11,19,201};
G{12,0,198};G{12,1,194};G{12,2,49};G{12,3,0};G{12,4,11};G{12,5,140};G{12,6,201};G{12,7,197};G{12,8,196};G{12,9,169};G{12,10,5};G{12,11,4};G{12,12,26};G{12,13,196};G{12,14,203};G{12,15,204};G{12,16,201};G{12,17,201};G{12,18,201};G{12,19,201};
G{13,0,197};G{13,1,193};G{13,2,50};G{13,3,1};G{13,4,10};G{13,5,140};G{13,6,204};G{13,7,200};G{13,8,194};G{13,9,144};G{13,10,3};G{13,11,11};G{13,12,78};G{13,13,205};G{13,14,201};G{13,15,200};G{13,16,201};G{13,17,201};G{13,18,201};G{13,19,201};
G{14,0,197};G{14,1,189};G{14,2,48};G{14,3,0};G{14,4,10};G{14,5,142};G{14,6,203};G{14,7,192};G{14,8,191};G{14,9,51};G{14,10,9};G{14,11,17};G{14,12,162};G{14,13,206};G{14,14,203};G{14,15,201};G{14,16,201};G{14,17,201};G{14,18,201};G{14,19,201};
G{15,0,199};G{15,1,186};G{15,2,45};G{15,3,1};G{15,4,9};G{15,5,141};G{15,6,197};G{15,7,177};G{15,8,49};G{15,9,3};G{15,10,14};G{15,11,143};G{15,12,208};G{15,13,199};G{15,14,199};G{15,15,201};G{15,16,201};G{15,17,201};G{15,18,201};G{15,19,201};
G{16,0,114};G{16,1,6};G{16,2,3};G{16,3,3};G{16,4,10};G{16,5,10};G{16,6,11};G{16,7,11};G{16,8,43};G{16,9,113};G{16,10,192};G{16,11,206};G{16,12,203};G{16,13,201};G{16,14,202};G{16,15,201};G{16,16,201};G{16,17,201};G{16,18,201};G{16,19,201};
G{17,0,203};G{17,1,196};G{17,2,204};G{17,3,195};G{17,4,201};G{17,5,200};G{17,6,202};G{17,7,203};G{17,8,203};G{17,9,199};G{17,10,205};G{17,11,201};G{17,12,203};G{17,13,202};G{17,14,201};G{17,15,201};G{17,16,201};G{17,17,201};G{17,18,201};G{17,19,201};
G{18,0,195};G{18,1,202};G{18,2,198};G{18,3,200};G{18,4,202};G{18,5,198};G{18,6,200};G{18,7,200};G{18,8,203};G{18,9,197};G{18,10,201};G{18,11,201};G{18,12,204};G{18,13,203};G{18,14,200};G{18,15,200};G{18,16,201};G{18,17,201};G{18,18,201};G{18,19,201};
G{19,0,203};G{19,1,196};G{19,2,198};G{19,3,201};G{19,4,197};G{19,5,202};G{19,6,205};G{19,7,203};G{19,8,199};G{19,9,203};G{19,10,205};G{19,11,200};G{19,12,198};G{19,13,200};G{19,14,202};G{19,15,203};G{19,16,201};G{19,17,201};G{19,18,201};G{19,19,201}].

(*Tool generated Coq definition of binary image*)
Definition coqbinaryimage := 
[B{0,0,white};B{0,1,white};B{0,2,white};B{0,3,white};B{0,4,white};B{0,5,white};B{0,6,white};B{0,7,white};B{0,8,white};B{0,9,white};B{0,10,white};B{0,11,white};B{0,12,white};B{0,13,white};B{0,14,white};B{0,15,white};B{0,16,white};B{0,17,white};B{0,18,white};B{0,19,white};
B{1,0,white};B{1,1,white};B{1,2,white};B{1,3,white};B{1,4,white};B{1,5,white};B{1,6,white};B{1,7,white};B{1,8,white};B{1,9,white};B{1,10,white};B{1,11,white};B{1,12,white};B{1,13,white};B{1,14,white};B{1,15,white};B{1,16,white};B{1,17,white};B{1,18,white};B{1,19,white};
B{2,0,white};B{2,1,white};B{2,2,white};B{2,3,white};B{2,4,white};B{2,5,white};B{2,6,white};B{2,7,white};B{2,8,white};B{2,9,white};B{2,10,white};B{2,11,white};B{2,12,white};B{2,13,white};B{2,14,white};B{2,15,white};B{2,16,white};B{2,17,white};B{2,18,white};B{2,19,white};
B{3,0,white};B{3,1,white};B{3,2,white};B{3,3,white};B{3,4,white};B{3,5,white};B{3,6,white};B{3,7,white};B{3,8,white};B{3,9,white};B{3,10,white};B{3,11,white};B{3,12,white};B{3,13,white};B{3,14,white};B{3,15,white};B{3,16,white};B{3,17,white};B{3,18,white};B{3,19,white};
B{4,0,white};B{4,1,white};B{4,2,white};B{4,3,white};B{4,4,white};B{4,5,white};B{4,6,white};B{4,7,white};B{4,8,white};B{4,9,white};B{4,10,white};B{4,11,white};B{4,12,white};B{4,13,white};B{4,14,white};B{4,15,white};B{4,16,white};B{4,17,white};B{4,18,white};B{4,19,white};
B{5,0,white};B{5,1,black};B{5,2,black};B{5,3,black};B{5,4,black};B{5,5,black};B{5,6,black};B{5,7,black};B{5,8,black};B{5,9,white};B{5,10,white};B{5,11,white};B{5,12,white};B{5,13,white};B{5,14,white};B{5,15,white};B{5,16,white};B{5,17,white};B{5,18,white};B{5,19,white};
B{6,0,white};B{6,1,white};B{6,2,black};B{6,3,black};B{6,4,black};B{6,5,white};B{6,6,white};B{6,7,white};B{6,8,black};B{6,9,black};B{6,10,black};B{6,11,white};B{6,12,white};B{6,13,white};B{6,14,white};B{6,15,white};B{6,16,white};B{6,17,white};B{6,18,white};B{6,19,white};
B{7,0,white};B{7,1,white};B{7,2,black};B{7,3,black};B{7,4,black};B{7,5,white};B{7,6,white};B{7,7,white};B{7,8,white};B{7,9,black};B{7,10,black};B{7,11,black};B{7,12,white};B{7,13,white};B{7,14,white};B{7,15,white};B{7,16,white};B{7,17,white};B{7,18,white};B{7,19,white};
B{8,0,white};B{8,1,white};B{8,2,black};B{8,3,black};B{8,4,black};B{8,5,white};B{8,6,white};B{8,7,white};B{8,8,white};B{8,9,white};B{8,10,black};B{8,11,black};B{8,12,black};B{8,13,white};B{8,14,white};B{8,15,white};B{8,16,white};B{8,17,white};B{8,18,white};B{8,19,white};
B{9,0,white};B{9,1,white};B{9,2,black};B{9,3,black};B{9,4,black};B{9,5,white};B{9,6,white};B{9,7,white};B{9,8,white};B{9,9,white};B{9,10,black};B{9,11,black};B{9,12,black};B{9,13,white};B{9,14,white};B{9,15,white};B{9,16,white};B{9,17,white};B{9,18,white};B{9,19,white};
B{10,0,white};B{10,1,white};B{10,2,black};B{10,3,black};B{10,4,black};B{10,5,white};B{10,6,white};B{10,7,white};B{10,8,white};B{10,9,white};B{10,10,black};B{10,11,black};B{10,12,black};B{10,13,white};B{10,14,white};B{10,15,white};B{10,16,white};B{10,17,white};B{10,18,white};B{10,19,white};
B{11,0,white};B{11,1,white};B{11,2,black};B{11,3,black};B{11,4,black};B{11,5,white};B{11,6,white};B{11,7,white};B{11,8,white};B{11,9,white};B{11,10,black};B{11,11,black};B{11,12,black};B{11,13,white};B{11,14,white};B{11,15,white};B{11,16,white};B{11,17,white};B{11,18,white};B{11,19,white};
B{12,0,white};B{12,1,white};B{12,2,black};B{12,3,black};B{12,4,black};B{12,5,white};B{12,6,white};B{12,7,white};B{12,8,white};B{12,9,white};B{12,10,black};B{12,11,black};B{12,12,black};B{12,13,white};B{12,14,white};B{12,15,white};B{12,16,white};B{12,17,white};B{12,18,white};B{12,19,white};
B{13,0,white};B{13,1,white};B{13,2,black};B{13,3,black};B{13,4,black};B{13,5,white};B{13,6,white};B{13,7,white};B{13,8,white};B{13,9,white};B{13,10,black};B{13,11,black};B{13,12,black};B{13,13,white};B{13,14,white};B{13,15,white};B{13,16,white};B{13,17,white};B{13,18,white};B{13,19,white};
B{14,0,white};B{14,1,white};B{14,2,black};B{14,3,black};B{14,4,black};B{14,5,white};B{14,6,white};B{14,7,white};B{14,8,white};B{14,9,black};B{14,10,black};B{14,11,black};B{14,12,white};B{14,13,white};B{14,14,white};B{14,15,white};B{14,16,white};B{14,17,white};B{14,18,white};B{14,19,white};
B{15,0,white};B{15,1,white};B{15,2,black};B{15,3,black};B{15,4,black};B{15,5,white};B{15,6,white};B{15,7,white};B{15,8,black};B{15,9,black};B{15,10,black};B{15,11,white};B{15,12,white};B{15,13,white};B{15,14,white};B{15,15,white};B{15,16,white};B{15,17,white};B{15,18,white};B{15,19,white};
B{16,0,white};B{16,1,black};B{16,2,black};B{16,3,black};B{16,4,black};B{16,5,black};B{16,6,black};B{16,7,black};B{16,8,black};B{16,9,white};B{16,10,white};B{16,11,white};B{16,12,white};B{16,13,white};B{16,14,white};B{16,15,white};B{16,16,white};B{16,17,white};B{16,18,white};B{16,19,white};
B{17,0,white};B{17,1,white};B{17,2,white};B{17,3,white};B{17,4,white};B{17,5,white};B{17,6,white};B{17,7,white};B{17,8,white};B{17,9,white};B{17,10,white};B{17,11,white};B{17,12,white};B{17,13,white};B{17,14,white};B{17,15,white};B{17,16,white};B{17,17,white};B{17,18,white};B{17,19,white};
B{18,0,white};B{18,1,white};B{18,2,white};B{18,3,white};B{18,4,white};B{18,5,white};B{18,6,white};B{18,7,white};B{18,8,white};B{18,9,white};B{18,10,white};B{18,11,white};B{18,12,white};B{18,13,white};B{18,14,white};B{18,15,white};B{18,16,white};B{18,17,white};B{18,18,white};B{18,19,white};
B{19,0,white};B{19,1,white};B{19,2,white};B{19,3,white};B{19,4,white};B{19,5,white};B{19,6,white};B{19,7,white};B{19,8,white};B{19,9,white};B{19,10,white};B{19,11,white};B{19,12,white};B{19,13,white};B{19,14,white};B{19,15,white};B{19,16,white};B{19,17,white};B{19,18,white};B{19,19,white}].

Definition rows' := 20.

Definition cols' := 20.

Definition threshold := 100.

(*Coq generated grayscale image*)
Definition gsimagecoq := createimage (rev coqmatriximg) (rows'-1) (cols'-1) (cols'-1). 

(*Coq generated binary image*)
 Definition binimagecoq := thresholding gsimagecoq threshold.

(*Proof that the tool generated gray image 'coqgsimage' and Coq generated image 'gsimagecoq' are the same.*) 
Lemma gsimage_eq: coqgsimage = gsimagecoq. 
 Proof. 
  unfold gsimage. 
  unfold gsimagecoq.  
  simpl.    
  reflexivity. 
Qed. 

(*Proof that the tool generated binary image 'coqbinaryimage' and Coq generated binary image 'binimagecoq' are the same.*)  
 Lemma binimage_eq: coqbinaryimage = binimagecoq. 
 Proof. 
  unfold coqbinaryimage. 
  unfold binimagecoq.  
 unfold gsimagecoq. 
  simpl.    
  reflexivity. 
Qed. 

Compute (thresholding coqgsimage 170). 

Compute gsimagecoq. (*creates gray scale image from coqmatriximg*) 

(*creates binary image in the threshold range*) 
Definition binaryimage := (thresholdrange coqgsimage 100 200). 

Compute (areasize binaryimage). 

Compute (runlength binaryimage). 

Compute (sumrunlen (runlength binaryimage)).